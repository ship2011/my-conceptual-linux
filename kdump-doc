kdump is a feature of the Linux kernel that creates crash dumps in the event of a kernel crash. When triggered, kdump exports a memory image that can be analyzed for the purposes of debugging and determining the cause of a crash

Looking for some configuration for kernel dump (kdump), what will generate the kerenel core dump file. Just for distinguish we are not talking about application, we are talking about OS itself crashing.

#sed -e "/^#/d;/^$/d" /etc/sysconfig/kdump

To check how much memory is allocated to kdump
#dmesg|grep crash

how to allocate memory for kdump, open below file and "Search for GRUB_CMDLINE_LINUX" and update "crashkernel=auto" in this file. if you want to reseve memory then update memrory
vi /etc/default/grub
GRUB_CMDLINE_LINUX="loglevel=3 console=tty1 console=ttyS0 earlyprintk=ttyS0 rootdelay=300 crashkernel=128M"

Now go to "kdump.conf" file "/etc/kdump.conf" and update this "path /var/crash"
vi /etc/kdump.conf
path /var/crash

 In redhat in this file "/etc/sysconfig/kdump" we don't make any changes.

For KDUMP kernal parameters configuration in Linux:
Non-Maskalble Interrupt (NMI) is a hardware interrupt that cannot be ignored by the processor.It is generally used only for critical hardware errors.
this feature can be used to signal an operating system when other standard input
mechanisms(keyboard, ssh, network, etc.) have ceased to function.

#vim /etc/sysctl.conf
kernel.unknown_nmi_panic = 1
kernel.panic_on_io_nmi = 1
kernel.panic_on_unrecovered_nmi = 1

Out of Memory (OOm) kill event
#vi /etc/sysctl.conf
vm.panic_on_oom = 1

CPU Soft Lockup event
#vi /etc/sysctl.conf
kernel.softlockup_panic = 1

Hung/Blocked Task event
#vi /etc/sysctl.conf
kernel.hung_task_panic = 1

Now let's update grub config
#grub2-mkconfig -o /boot/grub2/grub.cfg


Now start kdump service
#systemctl start kdump.service
#systemctl enable kdump.service

Now take reboot of the server, as we have changed some kernel parameters.


Now let's Crash then kernel
The SysRq-Facility is a special key combination that, when enabled allows the user to force a system kernel to respond to a specifc command. this feature is mostly for 
troubleshooting kernel-related problems or to force a response from a system while it is in a non-responsive state(hang).

#echo 1 > /proc/sys/kernel/sysrq
#echo c> /proc/sysrq-trigger

Now VM will be rebooted and go to /var/crash path to check if you kdump has been created here you will find directory name with timestamp and inside this directory you will see 2 files vmcore-dmesg.txt for booting log and vmcore to analzie this file some additional packages are required.

How to Analize Kdump
below pckage should be installed
#rpm -qa|grep -i crash

#rpm -qa kernel-debuginfo

those 2 packages should be installed to anaylize kdump vmcore

#crash /lib/debug/lib/modules/$(uname -r)/vmlinux  /var/crash/timestampdirectory/vmcore
here in below shell now check which cause kernel panic
crash>dis -l memoryaddress

to check stack trace for pid
crash> bt pidnumbrer
to check prosess details
crash>ps
for checking mount point details
crash>mount
for checking network details
crash>net -a

to check panic task details
crash> set -p

============some additional info========
kexec/kdump

Reboots into a new kernel with the old memory 
Can create a core dump of the kernel
The core dump can be analyzed later by other tools
Can send the core dump to other machines (from crashed machine)


Kexec:
Acts similar to the the exec*() system call
Replaces the old kernel with a new kernel
 Can be the same kernel that was running
 Can be a diffrent kernel from what is running

The old kernel still exists in memory, but does not execute 
Can also be used to do fast reboots
 For machines with slow firmware start up times (servers)

How does it work:
 you allocate some reserved memory in kerenl command (crashkernel=256M) and during kernel panic, Panic give instruction to Reserved Memory.

Kdump:
uses kexec to jump to new fresh kernel on crash
 Does not need to be the same kernel that was running
 The original (crashed) kernel is called "boot kernel", "first kernel" or "crashed kernel"

Several options to create a core file
Local file system (If local file system get corrupted then you can send to to remove fs)
*Local file system
*Remote file system
*Raw partition
*ssh/scp

*Kdump is the code in the initramdisk 
*makedumpfile - Utility to create a kernel "core" file
 - Reads /proc/vmcore
 - Runs in the second kernel
 - Create a modified core file
 - Must have access to debug symbols of the first kernel

On debian how to configure kdump
#apt-get install kdump-tools

Files:
 /etc/default/kdump-tools
 /usr/share/doc/kdump-tools/README.Debian

Tool to update : kdump-config
kdump-config load
 Set up symlinks (/var/lib/kdump) and load kdump kernel and initramdisk
kdump-config status
 Show the status of kdump (if it is operational or not)

On federo 36 how to configure
#dnf install kexec-tools

Files:
 /etc/kdump.conf
 /etc/sysconfig/kdump
 /usr/share/doc/kexec-tools/*

Tool to update: kdumpctl
kdumpctl start
 Will create a new initramdisk for kdump (if kdump.conf is modified)

kdumpctl rebuild
 WIll recreate the initramdisk even if kdump.conf is not modified

kdumpctl status
 Show if the kdump is operational or not

The Crash utility 
A GDB wrapper that understands the Linux Kernel structures..

Once you are in crash shell
bt give you backtrace of kernel crash.

crash>bt

